@model IEnumerable<Timesheet.Models.Entities.User.Timesheet>
@{
    ViewData["Title"] = "Index";
    var fieldToUse = ViewData["FieldToUse"] as string;
}




<div class="content">

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">خانه</a></li>
            <li class="breadcrumb-item active" aria-current="page">تایم شیت</li>
        </ol>
    </nav>
    <div class="panel panel-heading" style="background-color: lightgray ;box-shadow:3px 1px 1px 0 grey; border-radius:2px; margin-bottom: 5px">
        <span style="font-weight:bold;">

            لیست تایم شیت
        </span>
    </div>
   

    <div>
        <div class="k-rtl">
            <div id="grid"></div>
        </div>
        <div class="button-container" style="margin-top: 20px;">
            <button id="approveSignButton" class="k-button customGreen1">تایید و امضا</button>
        </div>
    </div>
</div>
@section Scripts {
   
   <script>
    var fieldToUse = "@ViewData["FieldToUse"]";
    var jsonData = JSON.parse('@Html.Raw(ViewBag.JsonData)');
    var groupingData = JSON.parse('@Html.Raw(ViewBag.GroupingData)' || "[]");
    var signed = JSON.parse('@Html.Raw(ViewBag.Signed.ToString().ToLower())');

    $(document).ready(function () {
            
        checkSignedStatus();
            function checkSignedStatus() {
                $.ajax({
                    url: "/UserArea/TimeSheet/GetSignedStatus",
                    method: "GET",
                    success: function (response) {
                        console.log("signed", response.signed);
                        if (response.signed) {
                            disableGridAndButton();
                        }
                    },
                    error: function (xhr) {
                        console.error("Error fetching signed status:", xhr);
                        alert("An error occurred while checking the signed status.");
                    }
                });
            }

            $("#approveSignButton").click(function () {
                $.ajax({
                    url: "/UserArea/TimeSheet/Sign",
                    method: "POST",
                    success: function (response) {
                        if (response.success) {
                            disableGridAndButton();
                        } else {
                            alert("Failed to sign. Please try again.");
                        }
                    },
                    error: function (xhr) {
                        console.error("Error signing:", xhr);
                        alert("An error occurred while signing.");
                    }
                });
            });

            function disableGridAndButton() {

                $(".k-switch").each(function () {
                    var switchWidget = $(this).data("kendoSwitch");
                    if (switchWidget) {
                        switchWidget.enable(false);
                    }
                });

                $("#approveSignButton").prop("disabled", true);
            }
            $("#grid").kendoGrid({
                dataSource: {
                    data: jsonData,
                    schema: {
                        model: {
                            fields: {
                               
                            }
                        }
                    },
                    pageSize: 1000,
                    groupPaging: true,
                    group: groupingData, // Your grouping data
                    aggregate: [{ field: "extraWork", aggregate: "sum" }]
                },
                height: 550,
                pageable: {
                    refresh: true,
                    pageSizes: [5, 10, 100, 500, jsonData.length],
                    buttonCount: 5
                },
                groupable: true,
                sortable: true,
                filterable: true,
                columns: [
                    { field: "autoNumber", title: "Auto Number", width: "200px" },
                    { field: "persCode", title: "Personel Code", width: "200px" },
                    { field: "fName", title: "First Name", width: "150px" },
                    { field: "lName", title: "Last Name", width: "150px" },
                    { field: "date", title: "Date", width: "120px" },
                    { field: "discipline", title: "Discipline", width: "150px" },
                    { field: "prjCode", title: "Project Code", width: "150px" },
                    { field: "phase", title: "Phase", width: "150px" },
                    { field: "docName", title: "Document Name", width: "300px" },
                    { field: "pPercent", title: "Percent", width: "100px" },
                    {
                        field: "extraWork",
                        title: "Extra Work",
                        width: "150px",
                        template: function (dataItem) {
                            var totalMinutes = dataItem.extraWork || 0;
                            var hours = Math.floor(totalMinutes / 60);
                            var minutes = totalMinutes % 60;
                            return `${hours}:${minutes.toString().padStart(2, '0')}`;
                        },
                        groupHeaderColumnTemplate: function (e) {
                            var totalMinutes = e.aggregates.extraWork.sum || 0;
                            var hours = Math.floor(totalMinutes / 60);
                            var minutes = totalMinutes % 60;
                            return `Total EW: ${hours}:${minutes.toString().padStart(2, '0')}`;
                        },
                        aggregates: ["sum"]
                    },
                    {
                        field: "Accept",
                        title: "Accept",
                        width: "150px",
                        template: function (dataItem) {

                            var isChecked = (dataItem[fieldToUse] === true);
                            return `<input type="checkbox" class="k-switch" data-id="${dataItem.autoNumber}" ${isChecked ? "checked" : ""} />`;
                        }
                        
                    },
                    {
                        width: "150px",
                        command: [
                            
                                
                            
                        ]
                    }
                ],
                dataBound: function (e) {
                    var grid = e.sender;
                    var groupRows = grid.tbody.find("tr.k-grouping-row");
                    groupRows.each(function (index, groupRow) {
                        grid.collapseGroup(groupRow); 
                    });
                    var outerGroups = groupRows.filter(function (index) {
                        var groupLevel = $(this).closest("table").find("tr").index($(this));
                        return groupLevel === 0; 
                    });
                    outerGroups.each(function () {
                        grid.expandGroup($(this)); 
                    });

                    $(".k-switch").each(function () {
                        var switchElement = $(this);

                        if (!switchElement.data("kendoSwitch")) {
                            switchElement.kendoSwitch({
                                change: function (e) {
                                    //var row = e.sender.element.closest("tr");
                                   // var grid = $("#grid").getKendoGrid();
                                   // var dataItem = grid.dataItem(row);
                                   // console.log(dataItem);
                                    var dataItemId = switchElement.data("id");
                                    var isChecked = e.sender.element.prop("checked"); 
                                    console.log(`${isChecked ? "Approve" : "Reject"} for Record ID: ${dataItemId}`);
                                    $.ajax({
                                        url: "/UserArea/TimeSheet/UpdateField", 
                                        method: "POST",
                                        data: {
                                            recordId: dataItemId,
                                            newValue: isChecked ? true : false 
                                        },
                                        success: function (response) {
                                            console.log("Field updated successfully:", response);
                                        },
                                        error: function (xhr, status, error) {
                                            console.error("Error updating the field:", error);
                                            alert("Failed to update the field. Please try again.");
                                        }
                                    });
                                }
                            });
                        }
                    });

                }
            });



        console.log("here");
            

    });
</script>



 }