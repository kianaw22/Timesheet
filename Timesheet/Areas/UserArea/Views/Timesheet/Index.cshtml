@model IEnumerable<Timesheet.Models.Entities.User.Timesheet>
@{
    ViewData["Title"] = "Index";
    var fieldToUse = ViewData["FieldToUse"] as string;
}


<style>
    .disabled-button {
        cursor: not-allowed !important;
        opacity: 0.6 !important; 
        pointer-events: none; 
    }
</style>

<div class="content">

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","User")">خانه</a></li>
            <li class="breadcrumb-item active" aria-current="page">تایم شیت</li>
        </ol>
    </nav>
    <div class="panel panel-heading" style="background-color: lightgray ;box-shadow:3px 1px 1px 0 grey; border-radius:2px; margin-bottom: 5px">
        <span style="font-weight:bold;">

            لیست تایم شیت
        </span>
    </div>
   

    <div>
        <div class="k-rtl">
            <div id="grid"></div>
        </div>
        <div class="button-container" style="margin-top: 20px;">
            <button id="approveSignButton" class="k-button customGreen1"  title="">تایید و امضا</button>
        </div>
    </div>
</div>
@section Scripts {

    <script>

        // دریافت رشته جیسون از ViewBag
        var fieldToUse = "@ViewData["FieldToUse"]";
        console.log(" field to use ", fieldToUse);
        var jsonData = JSON.parse('@Html.Raw(ViewBag.JsonData)');
        var groupingData = JSON.parse('@Html.Raw(ViewBag.GroupingData)' || "[]");
        var signed = JSON.parse('@Html.Raw(ViewBag.Signed.ToString().ToLower())');
        console.log(jsonData);

        $(document).ready(function () {


            checkSignedStatus();
            function checkSignedStatus() {
                $.ajax({
                    url: "/UserArea/TimeSheet/GetSignedStatus",
                    method: "GET",
                    success: function (response) {
                        console.log("signed", response.signed);
                        if (response.signed) {
                            disableGridAndButton();
                        }
                    },
                    error: function (xhr) {
                        console.error("Error fetching signed status:", xhr);
                        alert("An error occurred while checking the signed status.");
                    }
                });
            }

            $("#approveSignButton").click(function () {
                if (fieldToUse == "EngHead") {
                    var uncheckedRecords = [];
                    uncheckedRecords = uncheckedRecords.map(Number);
                    $(".k-switch input[type='checkbox']").each(function () {
                        var switchElement = $(this);
                        var isChecked = switchElement.prop("checked");
                        var recordId = switchElement.attr("data-id"); 

                        if (!isChecked) {
                            uncheckedRecords.push(Number(recordId));
                        }
                    });


                    if (uncheckedRecords.length > 0) {
                        console.log("Unchecked Records:", uncheckedRecords); // Debugging
                        $.ajax({
                            url: "/UserArea/TimeSheet/UpdateNotAccept", // Your backend endpoint
                            method: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(uncheckedRecords),
                            success: function (response) {
                                if (response.success) {
                                    console.log("Unchecked records updated!");

                                } else {
                                    console.log("Failed to update unchecked records.");
                                }
                            },
                            error: function (xhr) {
                                console.error("Error updating unchecked records:", xhr);

                            }
                        });
                    }
                }
                $.ajax({
                    url: "/UserArea/TimeSheet/Sign",
                    method: "POST",
                    success: function (response) {
                        if (response.success) {
                            disableGridAndButton();
                        } else {
                            alert("Failed to sign. Please try again.");
                        }
                    },
                    error: function (xhr) {
                        console.error("Error signing:", xhr);
                        alert("An error occurred while signing.");
                    }
                });
            });

            function disableGridAndButton() {

                $(".k-switch").each(function () {
                    var switchWidget = $(this).data("kendoSwitch");
                    if (switchWidget) {
                        switchWidget.enable(false);
                    }
                });

                var button = $("#approveSignButton");
                button.prop("disabled", true);
                button.attr("title", "قبلا تایید و امضا شده است");
                button.css("cursor", "not-allowed");
                // button.addClass("disabled-button");

            }
           

            // Add calculated field for group sum only
           // jsonData.forEach(item => {
           //     const work = item.timeSheetMWork || 0;
           //     const percent = item.pPercent || 0;
           //     item.effectiveWork = Math.round(work * percent / 100);  // used only in groupHeader
               
           // });


                $("#grid").kendoGrid({
                    dataSource: {
                        data: jsonData,
                        schema: {
                            model: {
                                fields: {
                                dMWork: { type: "number" },
                                    pPercent: { type: "number" },
                                   
                                }
                            }
                        },
                        pageSize: 1000,
                        groupPaging: true,
                        group: groupingData,
                        aggregate: [
                        { field: "dMWork", aggregate: "sum" }  // used only in group header
                        ]
                    },
                    height: 550,
                    pageable: {
                        refresh: true,
                        pageSizes: [5, 10, 100, 500, jsonData.length],
                        buttonCount: 5
                    },
                    groupable: true,
                    sortable: true,
                    filterable: true,
                    toolbar: ["search" , "excel"],
                    columns: [
                        { field: "autoNumber", title: "Auto Number", width: "200px" },
                        { field: "persCode", title: "Personel Code", width: "200px" },
                        { field: "fNamePersian", title: "First Name", width: "150px" },
                        { field: "lNamePersian", title: "Last Name", width: "150px" },
                        { field: "date", title: "Date", width: "120px" },
                        { field: "discipline", title: "Discipline", width: "150px" },
                        { field: "prjCode", title: "Project Code", width: "150px" },
                        {
                            field: "dMWork",
                            title: "Work",
                            width: "150px",
                            aggregates: ["sum"],
                            template: function (dataItem) {
                            var totalMinutes = dataItem.dMWork || 0;
                                var hours = Math.floor(totalMinutes / 60);
                                var minutes = totalMinutes % 60;
                                return `${hours}:${minutes.toString().padStart(2, '0')}`;
                            },
                            groupHeaderColumnTemplate: function (e) {
                            var totalMinutes = e.aggregates.dMWork?.sum || 0;
                                var hours = Math.floor(totalMinutes / 60);
                                var minutes = totalMinutes % 60;
                                
                                return `Total: ${hours}:${minutes.toString().padStart(2, '0')}`;
                            },
                          
                        },
                        { field: "phase", title: "Phase", width: "150px" },
                        { field: "docName", title: "Document Name", width: "300px" },
                        { field: "pPercent", title: "Percent", width: "100px" },
                        { field: "NotAccept", title: "Not Accept By", width: "150px" },
                        {
                            field: "Accept",
                            title: "Accept",
                            width: "150px",
                            template: function (dataItem) {
                                var isChecked = dataItem[fieldToUse] === true;
                                return `<input type="checkbox" class="k-switch" data-id="${dataItem.autoNumber}" ${isChecked ? "checked" : ""} />`;
                            }
                        },
                        { field: "DepHead", title: "مدیر بخش", width: "200px" },
                        { field: "EngHead", title: "مدیر مهندسی", width: "200px" }
                    ],
                    dataBound: function () {
                    $(".k-switch").each(function () {
                        var switchElement = $(this);

                        if (!switchElement.data("kendoSwitch")) {
                            switchElement.kendoSwitch({
                                change: function (e) {
                                    
                                    var dataItemId = switchElement.data("id");
                                    var isChecked = e.sender.element.prop("checked");
                                  //  console.log(`${isChecked ? "Approve" : "Reject"} for Record ID: ${dataItemId}`);
                                    $.ajax({
                                        url: "/UserArea/TimeSheet/UpdateField",
                                        method: "POST",
                                        data: {
                                            recordId: dataItemId,
                                            newValue: isChecked ? true : false
                                        },
                                        success: function (response) {
                                            console.log("Field updated successfully:", response);
                                        },
                                        error: function (xhr, status, error) {
                                            console.error("Error updating the field:", error);
                                            alert("Failed to update the field. Please try again.");
                                        }
                                    });
                                }
                            });
                        }
                    });
                    }
                });

                var grid = $("#grid").data("kendoGrid");
                grid.hideColumn("autoNumber");
                grid.hideColumn("persCode");
                grid.hideColumn("discipline");

        });
    </script>



 }